//К - ичные числа.Среди чисел в системе счисления с основанием K(2≤K≤10) определить сколько 
//имеется чисел из N(1 < N < 20, K + N < 26) разрядов таких, что в их записи не содержится 
//два и более подряд идущих нулей.Для того, чтобы избежать переполнения, ответ
//представьте в виде вещественного числа.

# include <iostream>
# include <windows.h>
# include <vector>
using namespace std;

int main()
{
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	int n, k;
	cout << "Среди чисел в системе счисления с основанием K (2<=K<=10) определить " << endl;
	cout << "сколько имеется чисел из N(1<N<20, K + N<26) разрядов таких," << endl;
	cout << "что в их записи не содержится два и более подряд идущих нулей." << endl;
	cout << "Вам необходимо ввести  два числа - число разрядов и систему счисления." << endl;
	cout << "-------------------------------------------------------------------" << endl;
	cout << endl;
	cout << endl;
	cout << "Введите число N - число разрядов в числе: ";
	cin >> n;
	cout << "Введите число K - систему счисления: ";
	cin >> k;

    if (k < 2 || k > 10 || n < 1 || n >= 20 || k + n >= 26) {
        cout << "Некорректные входные данные!" << endl;
        return 1;
    }

	// nz = числа в которых нет двух подряд идущих нулей и они не оканчиваются на 0
	// oz = числа в которых нет двух подряд идущих нулей и они оканчиваются на 0
	// tz = числа в которых есть два подряд идущих нуля
	// из числа класса nz может получиться число либо класса нз либо класса оз
	// из числа класса оз может получиться число либо класса нз либо класса тз
	// их числа класса тз может получиться число класса тз
	// nzn = nzn-1*(k-1) +oz(k-1); ozn = nzn-1; tzn = k*tzn-1+ozn-1;
	double i, nz, _nz, oz, _oz, tz, _tz;
	nz = k - 1;
	oz = 1;
	tz = 0;
	for (i = 2; i <= n; i++)
	{
		_nz = nz;
		_oz = oz;
		_tz = tz;
		nz = _nz * (k - 1) + _oz * (k - 1);
		oz = _nz;
		tz = _tz * k + _oz;
	}

	double result = nz + oz;
	cout << "Количество чисел, в которых нет два и более подряд идущих нулей: " << result << endl;

	
	return 0;
}
